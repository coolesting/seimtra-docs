
javascript:

	//display a menu , return the name be chosen with mouse
	function linyu_js_select(data, $this, options) {
		var menu_text = '';
		$.each(data, function(key, val){
			menu_text += '<li key="' + key + '">' + val + '</li>';
		});
		menu_text = '<ul class="linyu_js_select">' + menu_text + '</ul>';

		//init
		if ($this.next('ul').hasClass('linyu_js_select')) {
			$this.next('ul.linyu_js_select').show();
		} else {
			$this.after(menu_text);
			$linyu_js_select = $this.next('ul.linyu_js_select');

			$linyu_js_select.css('top', $this.offset().top);
			$linyu_js_select.css('left', $this.offset().left);

			$linyu_js_select.css('position', 'absolute');

			$('.linyu_js_select').css('background', 'white');
			$('.linyu_js_select').css('border', '1px solid black');
			$('.linyu_js_select').css('padding', '10px');

			$linyu_js_select.find('li').css('cursor', 'pointer');
			$linyu_js_select.find('li').hover(function(){
				$(this).css('background', '#DADDE2');
			}, function(){
				$(this).css('background', 'white');
			});
			$linyu_js_select.find('li').click(function(){
				$linyu_js_select.hide();
				$this.find('option[value="' + $(this).attr('key') + '"]').attr('selected', 'selected');
			});
			
			$linyu_js_select.mouseleave(function(){
				$(this).hide();
			});
		}

	}
	
	(function($){
		var methods = {
			init : function(options) {
				return this.each(function(){
					//default value
					var data = $(this).data('linyu_js_select');
					if(!data) {
						$(this).data('linyu_js_select', {a:'test'});
					}
					//default method
					$(this).linyu_js_select('select', options);
				});
			},

			//select
			select : function(options) {
				return this.each(function(){

					$(this).mouseover(function(){
						var option_json = {};
						$(this).find('option').each(function(index){
							if ($(this).text() != 'undefined') {
								option_json[$(this).attr('value')] = $(this).text();
							} 
						});
						linyu_js_select(option_json, $(this), options);
					});

				});
			}
		};

		$.fn.linyu_js_select = function(method) {
			if (methods[method]) {
				return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
			} else if (typeof method === 'object' || ! method) {
				return methods.init.apply(this, arguments);
			} else {
				$.error('Method ' + method + ' does not exist on plugins of jQeury');
			}
		};
	})(jQuery);

	$('select').linyu_js_select();
